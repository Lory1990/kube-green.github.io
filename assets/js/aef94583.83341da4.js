"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[794],{3905:function(e,t,l){l.d(t,{Zo:function(){return p},kt:function(){return d}});var n=l(7294);function u(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){u(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function k(e,t){if(null==e)return{};var l,n,u=function(e,t){if(null==e)return{};var l,n,u={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(u[l]=e[l]);return u}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(u[l]=e[l])}return u}var a=n.createContext({}),i=function(e){var t=n.useContext(a),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},p=function(e){var t=i(e.components);return n.createElement(a.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var l=e.components,u=e.mdxType,r=e.originalType,a=e.parentName,p=k(e,["components","mdxType","originalType","parentName"]),s=i(l),d=u,f=s["".concat(a,".").concat(d)]||s[d]||c[d]||r;return l?n.createElement(f,o(o({ref:t},p),{},{components:l})):n.createElement(f,o({ref:t},p))}));function d(e,t){var l=arguments,u=t&&t.mdxType;if("string"==typeof e||u){var r=l.length,o=new Array(r);o[0]=s;var k={};for(var a in t)hasOwnProperty.call(t,a)&&(k[a]=t[a]);k.originalType=e,k.mdxType="string"==typeof e?e:u,o[1]=k;for(var i=2;i<r;i++)o[i]=l[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,l)}s.displayName="MDXCreateElement"},1065:function(e,t,l){l.r(t),l.d(t,{frontMatter:function(){return k},contentTitle:function(){return a},metadata:function(){return i},toc:function(){return p},default:function(){return s}});var n=l(3117),u=l(102),r=(l(7294),l(3905)),o=["components"],k={title:"API Reference",sidebar_position:10},a=void 0,i={unversionedId:"apireference_v1alpha1",id:"apireference_v1alpha1",title:"API Reference",description:"Packages:",source:"@site/docs/apireference_v1alpha1.md",sourceDirName:".",slug:"/apireference_v1alpha1",permalink:"/docs/apireference_v1alpha1",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"API Reference",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Uninstall",permalink:"/docs/advanced/uninstall"},next:{title:"FAQ",permalink:"/docs/FAQ"}},p=[],c={toc:p};function s(e){var t=e.components,l=(0,u.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Packages:"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"#kube-green.com%2fv1alpha1"},"kube-green.com/v1alpha1"))),(0,r.kt)("h2",{id:"kube-green.com/v1alpha1"},"kube-green.com/v1alpha1"),(0,r.kt)("p",null,(0,r.kt)("p",null,"Package v1alpha1 contains API Schema definitions for the  v1alpha1 API group")),"Resource Types:",(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfo"},"SleepInfo"))),(0,r.kt)("h3",{id:"kube-green.com/v1alpha1.SleepInfo"},"SleepInfo"),(0,r.kt)("p",null,(0,r.kt)("p",null,"SleepInfo is the Schema for the sleepinfos API")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Field"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"apiVersion"),(0,r.kt)("br",null),"string"),(0,r.kt)("td",null,(0,r.kt)("code",null,"kube-green.com/v1alpha1"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"kind"),(0,r.kt)("br",null),"string"),(0,r.kt)("td",null,(0,r.kt)("code",null,"SleepInfo"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"metadata"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#objectmeta-v1-meta"},"Kubernetes meta/v1.ObjectMeta"))),(0,r.kt)("td",null,"Refer to the Kubernetes API documentation for the fields of the",(0,r.kt)("code",null,"metadata")," field.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"spec"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfoSpec"},"SleepInfoSpec"))),(0,r.kt)("td",null,(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"weekdays"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Weekdays are in cron notation."),(0,r.kt)("p",null,"For example, to configure a schedule from monday to friday, set it to \u201c1-5\u201d"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"sleepAt"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Hours:Minutes"),(0,r.kt)("p",null,"Accept cron schedule for both hour and minute. For example, ",(0,r.kt)("em",null,":"),"/2 is set to configure a run every even minute."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"wakeUpAt"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"Hours:Minutes"),(0,r.kt)("p",null,"Accept cron schedule for both hour and minute. For example, ",(0,r.kt)("em",null,":"),"/2 is set to configure a run every even minute. It is not required."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"timeZone"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"Time zone to set the schedule, in IANA time zone identifier. It is not required, default to UTC. For example, for the Italy time zone set Europe/Rome."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"excludeRef"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.ExcludeRef"},"[]ExcludeRef"))),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"ExcludeRef define the resource to exclude from the sleep."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"suspendCronJobs"),(0,r.kt)("br",null),(0,r.kt)("em",null,"bool")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"If SuspendCronjobs is set to true, on sleep the cronjobs of the namespace will be suspended.")))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"status"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfoStatus"},"SleepInfoStatus"))),(0,r.kt)("td",null)))),(0,r.kt)("h3",{id:"kube-green.com/v1alpha1.ExcludeRef"},"ExcludeRef"),(0,r.kt)("p",null,"(",(0,r.kt)("em",null,"Appears on: "),(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfoSpec"},"SleepInfoSpec"),")"),(0,r.kt)("p",null),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Field"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"apiVersion"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"ApiVersion of the kubernetes resources. Supported api version is \u201capps/v1\u201d."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"kind"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Kind of the kubernetes resources of the specific version. Supported kind is \u201cDeployment\u201d."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"name"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Name which identify the kubernetes resource."))))),(0,r.kt)("h3",{id:"kube-green.com/v1alpha1.SleepInfoSpec"},"SleepInfoSpec"),(0,r.kt)("p",null,"(",(0,r.kt)("em",null,"Appears on: "),(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfo"},"SleepInfo"),")"),(0,r.kt)("p",null,(0,r.kt)("p",null,"SleepInfoSpec defines the desired state of SleepInfo")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Field"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"weekdays"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Weekdays are in cron notation."),(0,r.kt)("p",null,"For example, to configure a schedule from monday to friday, set it to \u201c1-5\u201d"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"sleepAt"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Hours:Minutes"),(0,r.kt)("p",null,"Accept cron schedule for both hour and minute. For example, ",(0,r.kt)("em",null,":"),"/2 is set to configure a run every even minute."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"wakeUpAt"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"Hours:Minutes"),(0,r.kt)("p",null,"Accept cron schedule for both hour and minute. For example, ",(0,r.kt)("em",null,":"),"/2 is set to configure a run every even minute. It is not required."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"timeZone"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"Time zone to set the schedule, in IANA time zone identifier. It is not required, default to UTC. For example, for the Italy time zone set Europe/Rome."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"excludeRef"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.ExcludeRef"},"[]ExcludeRef"))),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"ExcludeRef define the resource to exclude from the sleep."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"suspendCronJobs"),(0,r.kt)("br",null),(0,r.kt)("em",null,"bool")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"If SuspendCronjobs is set to true, on sleep the cronjobs of the namespace will be suspended."))))),(0,r.kt)("h3",{id:"kube-green.com/v1alpha1.SleepInfoStatus"},"SleepInfoStatus"),(0,r.kt)("p",null,"(",(0,r.kt)("em",null,"Appears on: "),(0,r.kt)("a",{href:"#kube-green.com/v1alpha1.SleepInfo"},"SleepInfo"),")"),(0,r.kt)("p",null,(0,r.kt)("p",null,"SleepInfoStatus defines the observed state of SleepInfo")),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Field"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"lastScheduleTime"),(0,r.kt)("br",null),(0,r.kt)("em",null,(0,r.kt)("a",{href:"https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#Time"},"Kubernetes meta/v1.Time"))),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"Information when was the last time the run was successfully scheduled."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"operation"),(0,r.kt)("br",null),(0,r.kt)("em",null,"string")),(0,r.kt)("td",null,(0,r.kt)("em",null,"(Optional)"),(0,r.kt)("p",null,"The operation type handled in last schedule. SLEEP or WAKE_UP are the possibilities"))))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("em",null,"Generated with ",(0,r.kt)("code",null,"gen-crd-api-reference-docs"),"on git commit ",(0,r.kt)("code",null,"2694303"),".")))}s.isMDXComponent=!0}}]);
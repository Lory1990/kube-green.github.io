"use strict";(self.webpackChunkkube_green_github_io=self.webpackChunkkube_green_github_io||[]).push([[943],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,a(a({ref:t},s),{},{components:n})):r.createElement(m,a({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7520:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:2},u="Install",c={unversionedId:"install",id:"install",title:"Install",description:"Prerequisite",source:"@site/docs/install.md",sourceDirName:".",slug:"/install",permalink:"/docs/install",editUrl:"https://github.com/kube-green/kube-green.github.io/edit/main/docs/install.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"How it works",permalink:"/docs/usage/lifecycle"}},s=[{value:"Prerequisite",id:"prerequisite",children:[],level:2},{value:"Install with kustomize",id:"install-with-kustomize",children:[{value:"Change default configuration",id:"change-default-configuration",children:[],level:3},{value:"Deploy",id:"deploy",children:[],level:3}],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"install"},"Install"),(0,o.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"kube-green")," support all cluster versions >= 1.19 <= 1.23."),(0,o.kt)("p",null,"To successfully install ",(0,o.kt)("em",{parentName:"p"},"kube-green"),", in the cluster must be installed a ",(0,o.kt)("strong",{parentName:"p"},"cert-manager"),". If it is not already installed installed, ",(0,o.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/installation/"},"click here"),"."),(0,o.kt)("h2",{id:"install-with-kustomize"},"Install with kustomize"),(0,o.kt)("h3",{id:"change-default-configuration"},"Change default configuration"),(0,o.kt)("p",null,"You can change default configuration changing the config files."),(0,o.kt)("p",null,"For example, to deploy the controller in another namespace, change the file ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kube-green/kube-green/blob/main/config/default/kustomization.yaml#L2"},"kustomization.yaml")," with the desired namespace name."),(0,o.kt)("h3",{id:"deploy"},"Deploy"),(0,o.kt)("p",null,"To install ",(0,o.kt)("em",{parentName:"p"},"kube-green")," in the cluster, clone the repository and run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make deploy\n")),(0,o.kt)("p",null,"This will create a new namespace, ",(0,o.kt)("em",{parentName:"p"},"kube-green"),", which contains the pod of the operator."),(0,o.kt)("p",null,"Once installed, ",(0,o.kt)("em",{parentName:"p"},"kube-green")," uses webhook (exposed on port 9443) to check that SleepInfo CRD is valid. So, if you have a firewall rule which close port 9443, you must open it (or change the exposed port by configuration) otherwise it would not possible to add SleepInfo CRD."))}d.isMDXComponent=!0}}]);